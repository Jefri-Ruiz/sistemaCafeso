{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\sistemaCafeso\\\\client\\\\src\\\\pages\\\\usuarios\\\\RegistrarUsuarios.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrarUsuarios = () => {\n  _s();\n\n  /*   const [datos, setDatos] = useState({\r\n      password: '',\r\n      nombre: '',\r\n      apellidopaterno: '',\r\n      apellidomaterno: ''\r\n  }) */\n  const [password, setPassword] = useState(\"\");\n  const [nombre, setNombre] = useState(\"\");\n  const [apellidopaterno, setApellidopaterno] = useState(\"\");\n  const [apellidomaterno, setApellidomaterno] = useState(\"\");\n  /*   const handleInputChange = (event) => {\r\n       // console.log(event.target.name)\r\n       // console.log(event.target.value) \r\n      setDatos({\r\n          ...datos,\r\n          [event.target.name] : event.target.value\r\n      })\r\n  } */\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      /* console.log(datos); */\n      const body = {\n        password,\n        nombre,\n        apellidopaterno,\n        apellidomaterno\n      };\n      const response = await fetch(\"http://localhost:5000/usuarios\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      setNombre('');\n      console.log(response);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-4\",\n          controlId: \"formNombre\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"Nombre\",\n            value: nombre,\n            onChange: e => setNombre(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-4\",\n          controlId: \"formPaterno\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"Apellido paterno\",\n            value: apellidopaterno,\n            onChange: e => setApellidopaterno(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-4\",\n          controlId: \"formMaterno\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"Apellido materno\",\n            value: apellidomaterno,\n            onChange: e => setApellidomaterno(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formPass\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Asegurese ingresar correctamente la contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegistrarUsuarios, \"jh/eAL81bgiMoGicfoOsrR8grTo=\");\n\n_c = RegistrarUsuarios;\nexport default RegistrarUsuarios;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrarUsuarios\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/sistemaCafeso/client/src/pages/usuarios/RegistrarUsuarios.jsx"],"names":["React","useState","Form","Button","RegistrarUsuarios","password","setPassword","nombre","setNombre","apellidopaterno","setApellidopaterno","apellidomaterno","setApellidomaterno","onSubmitForm","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","console","log","err","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\r\nimport {Form, Button } from \"react-bootstrap\";\r\n\r\nconst RegistrarUsuarios = () => {\r\n\r\n/*   const [datos, setDatos] = useState({\r\n    password: '',\r\n    nombre: '',\r\n    apellidopaterno: '',\r\n    apellidomaterno: ''\r\n}) */\r\n    const [password, setPassword] = useState(\"\");\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [apellidopaterno, setApellidopaterno] = useState(\"\");\r\n    const [apellidomaterno, setApellidomaterno] = useState(\"\");\r\n\r\n/*   const handleInputChange = (event) => {\r\n     // console.log(event.target.name)\r\n     // console.log(event.target.value) \r\n    setDatos({\r\n        ...datos,\r\n        [event.target.name] : event.target.value\r\n    })\r\n} */\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      /* console.log(datos); */\r\n      const body = { password, nombre, apellidopaterno, apellidomaterno };\r\n      const response = await fetch(\"http://localhost:5000/usuarios\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      setNombre('');\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"contenedor\">\r\n        <Form onSubmit={onSubmitForm}>\r\n\r\n            {/* <Form.Label>Nombre</Form.Label> */}\r\n          <Form.Group className=\"mb-4\" controlId=\"formNombre\">\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Nombre\"\r\n              value={nombre}\r\n              onChange={e => setNombre(e.target.value)} \r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-4\" controlId=\"formPaterno\">\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Apellido paterno\"\r\n              value={apellidopaterno}\r\n              onChange={e => setApellidopaterno(e.target.value)} \r\n            />\r\n          </Form.Group>\r\n\r\n       \r\n          <Form.Group className=\"mb-4\" controlId=\"formMaterno\">\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Apellido materno\"\r\n              value={apellidomaterno}\r\n              onChange={e => setApellidomaterno(e.target.value)} \r\n            />\r\n          </Form.Group>\r\n \r\n          <Form.Group className=\"mb-3\" controlId=\"formPass\">\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)} \r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Asegurese ingresar correctamente la contraseña\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <br />\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Agregar\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrarUsuarios;\r\n"]},"metadata":{},"sourceType":"module"}